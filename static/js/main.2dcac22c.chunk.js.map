{"version":3,"sources":["components/Employees/Employees.jsx","components/EmployeesBirth/EmployeesBirth.jsx","components/LeftHeader/LeftHeader.jsx","components/RightHeader/RightHeader.jsx","App.js","reportWebVitals.js","store/redux-store.js","index.js"],"names":["Employees","dispatch","useDispatch","users","useSelector","state","reduce","arrUsers","user","firstLetter","lastName","push","sortedUsers","Object","keys","sort","forEach","val","className","entries","map","key","value","item","firstName","type","checked","onClick","changeStatusUser","EmployeesBirth","newUsersData","userItem","monthName","moment","dob","format","length","LeftHeader","props","RightHeader","App","useEffect","savedUsers","window","getItem","JSON","parse","fetch","then","res","json","result","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","findIndex","id","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dcac22c.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./Employees.css\";\n\nconst Employees = () => {\n  const dispatch = useDispatch();\n  let users = useSelector((state) => state.users);\n\n  users = users.reduce((arrUsers, user) => {\n    let firstLetter = user.lastName[0];\n    arrUsers[firstLetter]\n      ? arrUsers[firstLetter].push(user)\n      : (arrUsers[firstLetter] = [user]);\n\n    return arrUsers;\n  }, {});\n\n  let sortedUsers = {};\n\n  Object.keys(users)\n    .sort()\n    .forEach(function (val) {\n      sortedUsers[val] = users[val];\n    });\n\n  let changeStatusUser = (item) => {\n    item.checked = !item.checked;\n    dispatch({ type: \"CHANGE_STATUS_USER\", user: item });\n  };\n\n  return (\n    <div className=\"items-wrapper\">\n      {Object.entries(sortedUsers).map(([key, value]) => (\n        <div className=\"item\">\n          <div className=\"item-key\">{key}</div>\n          <div className=\"item-value\">\n            {value.map((item) => (\n              <div>\n                {`${item.lastName} ${item.firstName}`}\n                <input type=\"checkbox\" checked={item.checked} onClick={() => changeStatusUser(item)} />\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Employees;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport \"./EmployeesBirth.css\";\n\nconst EmployeesBirth = () => {\n  let users = useSelector((state) => state.users);\n\n  users = users.reduce((newUsersData, userItem) => {\n    let monthName = moment(userItem.dob).format(\"MMMM\");\n\n    if (userItem.checked) {\n      newUsersData[monthName]\n        ? newUsersData[monthName].push(userItem)\n        : (newUsersData[monthName] = [userItem]);\n    }\n\n    return newUsersData;\n  }, {});\n\n  return (\n    <div className=\"right-content\">\n      <div className=\"lists-wrapper\">\n        {Object.entries(users).map(([key, value]) => (\n          <div className=\"elem\">\n            <div className=\"elem-key\">{value.length ? key : null}</div>\n            <div className=\"elem-value\">\n              {value.map((item) => {\n                return item.checked ? (\n                  <ul>\n                    <li>\n                      {`${item.lastName} ${item.firstName} - `}\n                      {moment(item.dob).format(\"DD MMMM, YYYY\") + \" year\"}\n                    </li>\n                  </ul>\n                ) : null;\n              })}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeesBirth;\n","import React from \"react\";\nimport \"./LeftHeader.css\";\n\nconst LeftHeader = (props) => {\n  return <div className=\"title\">Employees</div>;\n};\n\nexport default LeftHeader;\n","import React from \"react\";\nimport \"./RightHeader.css\";\n\nconst RightHeader = (props) => {\n  return <div className=\"title\">Employees birthday</div>;\n};\n\nexport default RightHeader;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Employees from \"./components/Employees/Employees\";\nimport EmployeesBirth from \"./components/EmployeesBirth/EmployeesBirth\";\nimport LeftHeader from \"./components/LeftHeader/LeftHeader\";\nimport RightHeader from \"./components/RightHeader/RightHeader\";\nimport { useDispatch } from \"react-redux\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let savedUsers = window['localStorage'].getItem('SAVED_ITEMS');\n    const users = savedUsers ? JSON.parse(savedUsers) : [];\n    if (users?.length) {\n      dispatch({ type: \"SET_USERS\", users });\n    } else {\n      fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          result = result.map((item) => {\n            return {\n              ...item,\n              checked: false,\n            };\n          });\n          dispatch({ type: \"SET_USERS\", users: result });\n        }\n      );\n    }\n  }, [dispatch]);\n\n  return (\n    <div className=\"app-wrapper\">\n      <LeftHeader />\n      <RightHeader />\n      <Employees />\n      <EmployeesBirth />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\n\nlet initialState = {\n  users: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_USERS\":\n      return {\n        ...state,\n        users: action.users,\n      };\n    case \"CHANGE_STATUS_USER\":\n      const findIndex = state.users.findIndex(\n        (item) => item.id === action.user.id\n      );\n      const users = [...state.users];\n      users[findIndex] = action.user;\n      window['localStorage'].setItem('SAVED_ITEMS', JSON.stringify(users));\n      return {\n        ...state,\n        users: users,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (users) => ({ type: \"SET_USERS\", users });\nexport const changeStatusUSer = (user) => ({ type: \"SET_USERS\", user });\n\nconst store = createStore(usersReducer);\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/redux-store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}