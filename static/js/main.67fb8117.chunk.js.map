{"version":3,"sources":["components/Employees/Employees.jsx","components/EmployeesBirth/EmployeesBirth.jsx","components/LeftHeader/LeftHeader.jsx","components/RightHeader/RightHeader.jsx","App.js","reportWebVitals.js","store/redux-store.js","index.js"],"names":["Employees","dispatch","useDispatch","users","useSelector","state","reduce","arrUsers","user","firstLetter","lastName","push","sortedUsers","Object","keys","sort","forEach","val","className","entries","map","key","value","item","firstName","type","onClick","checked","changeStatusUser","EmployeesBirth","newUsersData","userItem","monthName","moment","dob","format","LeftHeader","props","RightHeader","App","useState","setError","setIsLoaded","setItems","useEffect","fetch","then","res","json","result","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","findIndex","id","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67fb8117.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Employees.css';\n\nconst Employees = () => {\n    const dispatch = useDispatch();\n    let users = useSelector((state) => state.users);\n\n    users = users.reduce((arrUsers, user) => {\n        let firstLetter = user.lastName[0];\n        arrUsers[firstLetter]\n            ? arrUsers[firstLetter].push(user)\n            : arrUsers[firstLetter] = [user]\n\n        return arrUsers;\n    }, {});\n\n    let sortedUsers = {};\n\n    Object.keys(users).sort().forEach(function (val) {\n        sortedUsers[val] = users[val]\n    });\n\n    let changeStatusUser = (item) => {\n        item.checked = !item.checked;\n        dispatch({ type: 'CHANGE_STATUS_USER', user: item });\n    };\n\n    return (\n        <div className='items-wrapper' >\n            {Object.entries(sortedUsers).map(([key, value]) =>\n                <div className='item'>\n                    <div className='item-key'>{key}</div>\n                    <div className='item-value' >\n                        {value.map(item =>\n                            <div>\n                                {`${item.lastName} ${item.firstName}`}\n                                <input type='checkbox' onClick={() => changeStatusUser(item)} />\n                            </div>)}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\n\nexport default Employees;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport './EmployeesBirth.css';\n\nconst EmployeesBirth = () => {\n    let users = useSelector((state) => state.users);\n\n    users = users.reduce((newUsersData, userItem) => {\n        let monthName = moment(userItem.dob).format('MMMM');\n\n        newUsersData[monthName]\n            ? newUsersData[monthName].push(userItem)\n            : newUsersData[monthName] = [userItem]\n\n        return newUsersData;\n    }, {});\n\n    return <div className='right-content'>\n        <div className='lists-wrapper' >\n            {Object.entries(users).map(([key, value]) =>\n                <div className='elem'>\n                    <div className='elem-key'>\n                        {key}\n                    </div>\n                    <div className='elem-value'>\n                        {value.map(item => {\n                            return item.checked\n                                ? <ul>\n                                    <li>\n                                        {`${item.lastName} ${item.firstName} - `}\n                                        {moment(item.dob).format('DD MMMM, YYYY') + ' year'}\n                                    </li>\n                                </ul>\n                                : null\n                        })}\n                    </div>\n                </div>\n            )}\n        </div>\n    </div>\n}\n\nexport default EmployeesBirth;","import React from 'react';\nimport './LeftHeader.css';\n\nconst LeftHeader = (props) => {\n    return <div className='title'>Employees</div>\n}\n\nexport default LeftHeader;","import React from 'react';\nimport './RightHeader.css';\n\nconst RightHeader = (props) => {\n return <div className='title'>Employees birthday</div>\n}\n\nexport default RightHeader;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Employees from './components/Employees/Employees';\nimport EmployeesBirth from './components/EmployeesBirth/EmployeesBirth';\nimport LeftHeader from './components/LeftHeader/LeftHeader';\nimport RightHeader from './components/RightHeader/RightHeader';\nimport { useDispatch } from 'react-redux';\n\nconst App = (props) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          result = result.map(item => {\n            return {\n              ...item,\n              checked: false\n            }\n          });\n          // setIsLoaded(true);\n          dispatch({type: 'SET_USERS', users: result});\n          setItems(result);\n        },\n        (error) => {\n            setIsLoaded(true);\n            setError(error);\n        }\n      )\n  }, [dispatch]);\n\n  return (\n    <div className='app-wrapper'>\n      <LeftHeader />\n      <RightHeader />\n      <Employees />\n      <EmployeesBirth />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\n\nlet initialState = {\n  users: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_USERS':\n      return {\n        ...state,\n        users: action.users\n      };\n    case 'CHANGE_STATUS_USER':\n      const findIndex = state.users.findIndex(item => item.id === action.user.id);\n      const users = [...state.users];\n      users[findIndex] = action.user;\n      return {\n        ...state,\n        users: users\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (users) => ({ type: 'SET_USERS', users });\nexport const changeStatusUSer = (user) => ({ type: 'SET_USERS', user });\n\nconst store = createStore(usersReducer);\n\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/redux-store'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}